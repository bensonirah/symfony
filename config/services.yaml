# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    
    _instanceof:
        Arch\Application\Middlewares\MiddlewareInterface:
            tags: ['arch.command.middleware']
        Arch\Infrastructure\Middlewares\HttpRequestMiddleware:
            tags: ['arch.http_request.middleware']
        Arch\Infrastructure\Middlewares\ExceptionMiddleware:
            tags: ['arch.exception_middleware']
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Arch\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    Arch\Application\Handler\:
        resource:   '../src/Application/Handler/*'
        tags: ['arch.command.handler']
    
    Arch\Application\Events\Handler\:
        resource:   '../src/Application/Events/Handler/*'
        tags:   ['arch.event.handler']

    arch.event.bus:
        class:  Arch\Application\Events\EventBus
        arguments:
            - !tagged_iterator 'arch.event.handler'


    Arch\Application\Middlewares\CommandHandlerMiddleware:
        arguments:
            - !tagged_iterator arch.command.handler
            - '@logger'

    Arch\Application\Events\EventBus:
        arguments:
            - !tagged_iterator arch.event.handler

    arch.app.middleware_resolver:
        class: Arch\Application\MiddlewaresResolver
        arguments:
            - '@service_container'
            - !tagged_iterator arch.command.middleware

    arch.http.middleware_resolver:
        class:  Arch\Infrastructure\Middlewares\HttpMiddlewareResolver
        arguments:
            - '@service_container'
            - !tagged_iterator arch.http_request.middleware

    arch.exception.middleware_resolver:
        class: Arch\Infrastructure\Middlewares\ExceptionMiddlewareResolver
        arguments:
            - '@service_container'
            - !tagged_iterator arch.exception_middleware

    Arch\Application\CommandBus:
        arguments:
            - '@arch.app.middleware_resolver'
            - '@logger'


    Arch\Infrastructure\EventSubscriber\RequestSubscriber:
        arguments:
            - '@arch.http.middleware_resolver'
            - '@logger'


    Arch\Infrastructure\EventSubscriber\ExceptionSubscriber:
        arguments:
            - '@arch.exception.middleware_resolver'
            - '@logger'